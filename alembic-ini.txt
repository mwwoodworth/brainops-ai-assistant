# Alembic configuration file for BrainOps database migrations

[alembic]
# Path to migration scripts
script_location = db/migrations

# Template used to generate migration file names
file_template = %%(year)d%%(month).2d%%(day).2d_%%(hour).2d%%(minute).2d-%%(rev)s_%%(slug)s

# Timezone to use for file timestamp generation
timezone = UTC

# Max length of characters to apply to the "slug" field
truncate_slug_length = 40

# Set to 'true' to run environment during revision generation
revision_environment = false

# Set to 'true' to allow .pyc and .pyo files without a source .py file
sourceless = false

# Version location specification
version_locations = %(here)s/bar:%(here)s/bat:db/migrations/versions

# Version path separator
version_path_separator = os  # Use os.pathsep

# Set to 'true' to search source files recursively
recursive_version_locations = false

# The output encoding used when revision files are written
output_encoding = utf-8

# Database connection URL - will be overridden by env.py
sqlalchemy.url = postgresql://user:pass@localhost/dbname


[post_write_hooks]
# Post-generation hooks to format generated files
hooks = black
black.type = console_scripts
black.entrypoint = black
black.options = -l 88


# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S