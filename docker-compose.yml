version: '3.8'

services:
  # FastAPI Backend Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: fastapi-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/brainops
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
    env_file:
      - .env.master
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./apps:/app/apps
      - ./alembic:/app/alembic
      - ./logs:/app/logs
    command: ["uvicorn", "apps.backend.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    networks:
      - brainops-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: postgres-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=brainops
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - brainops-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: redis-cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - brainops-network

  # PGAdmin (Optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@brainops.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - brainops-network
    profiles:
      - tools

  # Database Migration Service
  migrate:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: alembic-migrate
    command: ["alembic", "upgrade", "head"]
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/brainops
    env_file:
      - .env.master
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - brainops-network
    profiles:
      - migrate

volumes:
  postgres_data:
  redis_data:

networks:
  brainops-network:
    driver: bridge

  # Additional production services can be enabled with profiles:
  # docker-compose --profile production up
  # docker-compose --profile workers up
  # docker-compose --profile tools up